apiVersion: v1
kind: Pod
metadata:
  labels:
    component: kube-apiserver
    tier: control-plane
  name: kube-apiserver
  namespace: kube-system
spec:
  containers:
  - name: kube-apiserver
    image: k8s.gcr.io/kube-apiserver:v{{ kubernetes_version }}
    imagePullPolicy: IfNotPresent
    command:
      - kube-apiserver
      - --advertise-address={{ kubernetes_api_advertise_ip }}
      - --allow-privileged=true
      - --authorization-mode=Node,RBAC
      - --anonymous-auth=false
      - --client-ca-file=/etc/kubernetes/pki/ca.crt
      - --enable-admission-plugins=NodeRestriction
      - --enable-bootstrap-token-auth=true
      - --feature-gates={{ kubernetes_feature if kubernetes_feature }}
      - --etcd-cafile={{ etcd_client_trusted_ca_file }}
      - --etcd-certfile={{ etcd_client_cert_file }}
      - --etcd-keyfile={{ etcd_client_key_file }}
      - --etcd-servers=https://{{ groups[etcd_peer_group] | map('extract', hostvars, 'ansible_host') | join(':2379,https://') }}:2379
{% if kubernetes_encryption_key %}
      - --encryption-provider-config=/etc/kubernetes/pki/encryption-provider.yml
{% endif %}
      - --insecure-port=0
      - --kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt
      - --kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname

      - --proxy-client-cert-file=/etc/kubernetes/pki/apiserver-proxy-client.crt
      - --proxy-client-key-file=/etc/kubernetes/pki/apiserver-proxy-client.key
      - --requestheader-allowed-names=front-proxy-client
      - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt
      - --requestheader-extra-headers-prefix=X-Remote-Extra-
      - --requestheader-group-headers=X-Remote-Group
      - --requestheader-username-headers=X-Remote-User

      - --secure-port=6443
      - --service-account-issuer=sa
      - --service-account-signing-key-file=/etc/kubernetes/pki/sa.key
      - --service-account-key-file=/etc/kubernetes/pki/sa.pub
      - --service-cluster-ip-range={{ kubernetes_service_net }}{{ ','+kubernetes_service_net6 if kubernetes_service_net6 }}
      - --service-node-port-range={{ kubernetes_api_nodeport_range }}
      - --tls-cert-file=/etc/kubernetes/pki/apiserver.crt
      - --tls-private-key-file=/etc/kubernetes/pki/apiserver.key
      - --event-ttl=48h
      - --v=1

    # livenessProbe:
    #   failureThreshold: 8
    #   httpGet:
    #     host: 127.0.0.1
    #     path: /healthz
    #     port: 6443
    #     scheme: HTTPS
    #   initialDelaySeconds: 15
    #   timeoutSeconds: 15

    resources:
      requests:
        cpu: 250m

    volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ssl/etcd
        name: etcd-certs
        readOnly: true
      - mountPath: /etc/kubernetes/pki
        name: k8s-certs
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true

  hostNetwork: true
  priorityClassName: system-cluster-critical
  volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ssl/etcd
        type: DirectoryOrCreate
      name: etcd-certs
    - hostPath:
        path: /etc/kubernetes/pki
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
